<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section01.xml.DynamicSqlMapper">

    <resultMap id="menuResultMap" type="MenuDTO"> <!--DTO로 매핑-->
        <id property="code" column="MENU_CODE"/>
        <result property="name" column="MENU_NAME"/>
        <result property="price" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/> <!--연결-->
    </resultMap>

    <!-- if 태그 :  test 속성의 조건에 해당하는 경우에는 엘리먼트 구문을 쿼리에 포함한다-->
    <!--(1)-->
    <select id="selectMenuByPrice" resultMap="menuResultMap" parameterType="hashmap">
        SELECT
        MENU_CODE
        , MENU_NAME
        , MENU_PRICE
        , CATEGORY_CODE
        , ORDERABLE_STATUS
        FROM TBL_MENU
        WHERE ORDERABLE_STATUS = 'Y' <!--여기까지는 고정-->
        <!--하고싶은 기능 쓰기-->
        <!--크다 작다 기호연산자 써도 되지만 문자로 된 연산자를 써본것 gte는 작거나나같다(<=), lte는 크거나 같다(>=)-->
        <if test="price gte 0 and price lte 10000"> <!--""안에 조건을 씀 if문이 맞으면 안에 구문 실행 아니면 실행 안됨-->
            <!-- < 만 쓰면 태그이름 필요. 유의할점 : 범위를 너무 넓게 잡으면 안됨-->
            <![CDATA[
            AND MENU_PRICE < #{price}
            ]]>
        </if>
        <if test="price gt 10000 and price lte 20000">
            AND MENU_PRICE BETWEEN 10000 AND #{price} <!--범위를 계속 쪼개보는 중-->
        </if>
        <if test="price gt 20000 and price lte 30000">
            AND MENU_PRICE BETWEEN 20000 AND #{price}
        </if>
        <if test="price gt 30000">
            AND MENU_PRICE BETWEEN 30000 AND #{price}
        </if>
        ORDER BY MENU_CODE
    </select>

    <!--(2)-->
    <select id="searchMenu" resultMap="menuResultMap" parameterType="SearchCriteria"><!--이 경로에서 넘어온다는뜻-->
        SELECT
        MENU_CODE
        , MENU_NAME
        , MENU_PRICE
        , CATEGORY_CODE
        , ORDERABLE_STATUS
        FROM TBL_MENU
        <!--이제 동적인 쿼리문 조건작성 해보자-->
        <if test="condition == 'category'"> <!--필드명을 이용해 꺼냄--> <!--위의 항목 조회조건안에 예를 들어 한식이 들어가려면 조인(메뉴테이블과 카테고리 테이블)을 해야겠음-->
            JOIN TBL_CATEGORY USING(CATEGORY_CODE)
        </if>
        WHERE ORDERABLE_STATUS = 'Y'
        <if test="condition == 'name'">
            AND MENU_NAME LIKE '%' || #{value} || '%' <!--라이크를 연결하려고(연결연산자 쓸라고) %를 썼음 name마늘 같은 검색한 명이 value에 들어가는것 -->
        </if>
        <if test="condition == 'category'">
            AND CATEGORY_NAME = #{value} <!--예를 들어 category한식 을 입력하면 value에 들어감-->
        </if>
        ORDER BY MENU_CODE
    </select>

    <!-- (choose) -->
    <!-- choose(when, otherwise) 태그-->
    <!--when 태그 test 속성 조건에 주합하면 whne 엘리먼트 구문을 쿼리에 포함한다-->
    <!--어떤 when 조건도 만족하지 못하면 otherwise 엘리먼트 구문을 쿼리에 포함한다.-->
    <select id="searchMenuBySupCategory" resultMap="menuResultMap" parameterType="SearchCriteria">
        SELECT
        MENU_CODE
        , MENU_NAME
        , MENU_PRICE
        , CATEGORY_CODE
        , ORDERABLE_STATUS
        FROM TBL_MENU
        WHERE ORDERABLE_STATUS = 'Y'
        <choose> <!--이중에 선택하겠다는 뜻. 이 조건 만족하면 ~ 한다-->
            <when test="value == '식사'">
                AND CATEGORY_CODE IN (4,5,6,7)
            </when>
            <when test="value == '음료'">
                AND CATEGORY_CODE IN (8,9,10)
            </when>
            <otherwise>
                AND CATEGORY_CODE IN (11,12)
            </otherwise>
        </choose>
        ORDER BY MENU_CODE <!--정렬 하는 구문-->
    </select>

    <!-- (foreach) -->
    <!--foreach 태그 : java의 for문 같은 역할을 한다-->
    <!--
    1. collection 속성 : 반복을 수행할 대상
    2. item 속성 : 반복을 수행할 때마다 꺼내올 값의 이름 설정
    3. open 속성 : 해당 엘리먼트 구문의 가장 앞에 올 문자
    4. separator 속성 : 반복이 수행될 때 꺼내온 item 사이에 들어갈 문자
    5. close 속성 : 해당 엘리먼트 구문의 마지막에 올 문자
    -->
    <select id="searchMenuByRandomMenuCode" resultMap="menuResultMap" parameterType="hashmap">
        SELECT
        MENU_CODE
        , MENU_NAME
        , MENU_PRICE
        , CATEGORY_CODE
        , ORDERABLE_STATUS
        FROM TBL_MENU
        WHERE ORDERABLE_STATUS = 'Y'
        AND MENU_CODE IN <!--(1,3,7,10,15)이걸 반복문으로 할수 있게 밑에 완성해보자-->
        <foreach collection="randomCodeList" item="menuCode" open="(" separator="," close=")">
            #{menuCode}
        </foreach>
    </select>

    <!-- (trim(1)) -->
    <!-- where 태그 : 엘리먼트 구문이 where로 시작하지 않으면 자동으로 where을 붙여준다
    또한 where 내부에 모두 쿼리문이 추가 되지 않는 상황이면 where을 무시한다.
    또한 엘리먼트 구문이 AND나 OR로 시작되면 자동으로 해당 단어를 지워준다-->
    <select id="searchMenuByCodeOrSearchAll" resultMap="menuResultMap" parameterType="SearchCriteria">
        SELECT
        MENU_CODE
        , MENU_NAME
        , MENU_PRICE
        , CATEGORY_CODE
        , ORDERABLE_STATUS
        FROM TBL_MENU
        <if test="condition != null and condition eq 'menuCode'">
            <where> <!--왜얼이라는 태그를 쓸수 있다-->
                MENU_CODE = #{value} <!--조건-->
            </where>
        </if>
    </select>

    <!-- (trim(2)) -->
    <!--
    1. prefix 속성 : 처리후 엘리먼트의 내용이 있으면 가장 앞에 붙여주는 내용 기술
    2. prefixOverrides 속성 : 처리후 엘리먼트의 내용중 가장 앞에 속성 값에 해당하는 문자를 자동 삭제
    3. suffix 속성 : 처리후 엘리먼트의 내용이 있으면 가장 뒤에 붙여주는 내용 기술
    4. suffixOverrides 속성 : 처리후 엘리먼트
    -->
    <select id="searchMenuByNameOrCategory" parameterType="hashmap" resultMap="menuResultMap">
        SELECT
              MENU_CODE
            , MENU_NAME
            , MENU_PRICE
            , CATEGORY_CODE
            , ORDERABLE_STATUS
        FROM TBL_MENU
        <!-- 문제 상황 발생 : 카테고리로만 조회하는 경우 WHERE 키워드가 누락되며 AND 키워드로 시작하므로 조회 불가-->
        <!--  <if test="nameValue != null">
            WHERE MENU_NAME LIKE '%' || #{nameValue} || '%'
        </if>
        <if test="categoryValue != null">
            AND CATEGORY_CODE = #{categoryValue}
        </if>  =================================================================================-->

        <!-- 문제 해결 방법 1. WHER 태그 사용-->
        <!-- <where>
            <if test="nameValue != null">
                MENU_NAME LIKE '%' || #{nameValue} || '%'
             </if>
            <if test="categoryValue != null">
                AND CATEGORY_CODE = #{categoryValue}
            </if>
        </where> -->

        <!-- 문제 해결 방법 2. trim 태그 사용  (방법 1, 2 중 아무거나 하나 써도 됨)-->
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="nameValue != null">
                MENU_NAME LIKE '%' || #{nameValue} || '%'
            </if>
            <if test="categoryValue != null">
                AND CATEGORY_CODE = #{categoryValue}
            </if>
        </trim>
    </select>

    <!-- (trim(3)) -->
    <update id="modifyMenu" parameterType="hashmap">
        UPDATE
        TBL_MENU
        <!--문제 상황 발생 : 메뉴명 값을 입력하지 않을 경우 set이 붙지 않고 , 로 구문이 시작하는 오류가 있다-->
        <!-- <if test="name != null and name != ''">
             SET MENU_NAME = #{name}
         </if>
         <if test="categoryCode != null and categoryCode gt 0">
             ,CATEGORY_CODE = #{categoryCode}
         </if>
         <if test="orderableStatus != null and orderableStatus != ''">
             ORDERABLE_STATUS = #{orderableStatus}
         </if>
         WHERE MENU_CODE = #{code} ===========================================================-->

        <!--해결 방안 1. set 태그 사용-->
      <!--  <set>
            <if test="name != null and name != ''">
                  MENU_NAME = #{name}
            </if>
            <if test="categoryCode != null and categoryCode gt 0">
                , CATEGORY_CODE = #{categoryCode}
            </if>
            <if test="orderableStatus != null and orderableStatus != ''">
                , ORDERABLE_STATUS = #{orderableStatus}
            </if>
        </set>
        WHERE MENU_CODE = #{code} -->

        <!--해결 방안 2. teim 태그 사용  (방안 1,2중 아무거나 사용하면 됨)-->
        <trim prefix="SET" prefixOverrides=",">
            <if test="name != null and name != ''">
                MENU_NAME = #{name}
            </if>
            <if test="categoryCode != null and categoryCode gt 0">
                , CATEGORY_CODE = #{categoryCode}
            </if>
            <if test="orderableStatus != null and orderableStatus != ''">
                , ORDERABLE_STATUS = #{orderableStatus}
            </if>
        </trim>
        WHERE MENU_CODE = #{code}
    </update>

</mapper>