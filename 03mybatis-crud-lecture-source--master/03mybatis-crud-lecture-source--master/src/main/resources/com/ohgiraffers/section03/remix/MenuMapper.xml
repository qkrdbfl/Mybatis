<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
MenuMapper 인터페이스의 메소드 호출 시 실행 될 구문을 XML 파일에 기재하는 방법 !!
1. Mapper 인터페이스와 동일한 패키지에 위치해야함
2. Mapper 인터페이스의 풀 네임을 네임스페이스로 지정해야 함
3. Mapper 인터페이스와 XML의 이름이 동일해야함
4. 작성한 메소드의 이름과 id가 일치하고, 리턴 타입이 일치하는 쿼리문을 모두 작성해야 한다
-->

<mapper namespace="com.ohgiraffers.section03.remix.MenuMapper"> <!--namespace.id-->

    <!--조회한 컬럼과 DTO를 매핑 시키기 위한 설정이다-->
    <resultMap id = "menuResultMap" type = "com.ohgiraffers.section03.remix.MenuDTO"><!--namespace.id-->

        <id property="code" column="MENU_CODE"/>
        <result property="name" column="MENU_NAME"/>
        <result property="price" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>

    <!--전체메뉴 조회를 위해 작성-->
    <select id="selectAllMenu" resultMap="menuResultMap">
        SELECT
        MENU_CODE
        , MENU_NAME
        , MENU_PRICE
        , CATEGORY_CODE
        , ORDERABLE_STATUS
        FROM TBL_MENU
        WHERE ORDERABLE_STATUS = 'Y'
        ORDER BY MENU_CODE    <!--DTO에 쓴 참조하는 데이터랑 똑같이 기재해줘야함-->
    </select>

    <!--메뉴 코드로 메뉴 조회를 위해 작성하러 옴-->
    <!--파라미터가 한 개인 경우 바인딩 되는 이름은 무엇을 작성해도 상관없음 다만 의미적으로 맞춰서 code라고 작성함-->
    <!--parameterType 속성은 optional 이다-->
    <!--resultMap : 위에서 생성한 ResultMap 을 리턴 타입으로 사용하려는 경우-->
    <!--resultType : 이미 정의 되어 있는 타입을 이용해서 리턴 타입으로 사용하는 경우-->
    <!--resultMap or resultType 중에 맞춰서 작성-->
    <select id="selectMenuByCode" parameterType="_int" resultMap="menuResultMap"> <!-- DAO클래스에 작성된 mapper를 참조해 작성한 메소드 코드 : selectMenuByCode(SqlSession sqlSession, int code) 에 맞춰 작성-->
        SELECT
        MENU_CODE
        , MENU_NAME
        , MENU_PRICE
        , CATEGORY_CODE
        , ORDERABLE_STATUS
        FROM TBL_MENU
        WHERE MENU_CODE = #{code} <!-- {}안에 쓸 값을 채우기. DAO클래스에 selectMenuByCode메소드안의 리턴하는 코드 :
        return sqlSession.selectOne("MenuMapper.selectMenuByCode", code); 에 맞춰 작성 -->
    </select>

    <!--신규메뉴 등록을 위해 작성-->
    <!--insert, update, delete의 경우 resultType은 작성하지 않고, 기본적으로 _int 로 수행 결과 반환-->
    <!--파라미터로 전달된 DTO의 필드명으로 값을 바인딩 해야하며 getter를 내부적으로 이용하므로 getter가 없으면 에러가 발생함-->
    <insert id="insertMenu" parameterType="com.ohgiraffers.section03.remix.MenuDTO">
        INSERT
        INTO TBL_MENU
        (
        MENU_CODE
        , MENU_NAME
        , MENU_PRICE
        , CATEGORY_CODE
        , ORDERABLE_STATUS
        )
        VALUES
        (
        SEQ_MENU_CODE.NEXTVAL
        , #{name} <!--마이바티스는 ?,?,? 를 안해도 됨 무슨 값을 넣을지 필드 값 표기를 해주기-->
        , #{price} <!--getprice 메소드가 있어야함 나머지2개도 마찬가지-->
        , #{categoryCode} <!--규칙 지켜서 작성하기-->
        ,'Y'
        )
    </insert>

    <!--메뉴 수정-->
    <update id="updateMenu" parameterType="com.ohgiraffers.section03.remix.MenuDTO">
        UPDATE
        TBL_MENU
        SET MENU_NAME = #{name}
        , MENU_PRICE = #{price}
        , CATEGORY_CODE = #{categoryCode}
        WHERE MENU_CODE = #{code}

    </update>

    <!--메뉴 삭제-->
    <delete id="deleteMenu" parameterType="_int">
        DELETE
        FROM TBL_MENU
        WHERE MENU_CODE = #{code}
    </delete>
</mapper>